{"version":3,"sources":["Components/Services/services.js","Components/HomePage/HomePage.module.css","Components/HomePage/HomePage.js"],"names":["API_KEY","URL","firstFetch","fetch","then","res","json","catch","error","console","log","fetchByMovieTitle","title","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","module","exports","HomePage","popMovies","dispatch","isFirstRender","useRef","useEffect","current","type","payload","movie","results","className","s","firstRenderList","map","to","link","name"],"mappings":"qJAAA,8KAAMA,EAAU,mCACVC,EAAM,gCAENC,EAAa,WACf,OAAQC,MAAM,GAAD,OAAIF,EAAJ,oCAAmCD,EAAnC,oBACRI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG9BG,EAAoB,SAACC,GACvB,OACIT,MAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,kBAAgDY,IAChDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAGlCK,EAAiB,SAACC,GACpB,OACIX,MAAM,GAAD,OAAIF,EAAJ,iBAAgBa,EAAhB,oBAA8Bd,IAC9BI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAIlCO,EAAiB,SAACD,GACpB,OACIX,MAAM,GAAD,OAAIF,EAAJ,iBAAgBa,EAAhB,4BAAsCd,IACtCI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAIlCQ,EAAoB,SAACF,GACvB,OACIX,MAAM,GAAD,OAAIF,EAAJ,iBAAgBa,EAAhB,4BAAsCd,IACtCI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,mBCnCxCS,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,KAAO,yB,gCCA7E,yDAoCeC,UA/BE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,EAAgBC,kBAAO,GAe7B,OAbAC,qBAAU,WACN,GAAIF,EAAcG,QAQd,OAPAJ,EAAS,CAAEK,KAAM,YAAaC,QAAS,YACvCzB,cAAaE,MAAK,SAAAwB,GACdP,EAAS,CAAEK,KAAM,eAAgBC,QAASC,EAAMC,UAChDR,EAAS,CAAEK,KAAM,YAAaC,QAAS,gBAEtCpB,OAAM,SAAAC,GAAWC,QAAQC,IAAIF,WAClCc,EAAcG,SAAU,MAM5B,qCACI,gDACA,oBAAIK,UAAWC,IAAEC,gBAAjB,SACKZ,EAAUa,KAAI,SAACL,GACZ,OAAIA,EAAMhB,MACE,6BAAoB,cAAC,IAAD,CAAMsB,GAAE,iBAAYN,EAAMd,IAAMgB,UAAWC,IAAEI,KAA7C,SAAoDP,EAAMhB,SAArEgB,EAAMd,IAEnB,qBAAmBgB,UAAWC,IAAEI,KAAhC,UAAuCP,EAAMQ,KAA7C,kBAASR,EAAMd","file":"static/js/HomePage.e792587e.chunk.js","sourcesContent":["const API_KEY = '6e769984a853ea1bdeede26e9a1ea504'\r\nconst URL = 'https://api.themoviedb.org/3/'\r\n\r\nconst firstFetch = () => {\r\n    return (fetch(`${URL}trending/all/day?api_key=${API_KEY}&language=en-US`)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error))\r\n    );\r\n};\r\nconst fetchByMovieTitle = (title) => {\r\n    return (\r\n        fetch(`${URL}search/movie?api_key=${API_KEY}&query=${title}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\nconst fetchMovieById = (id) => {\r\n    return (\r\n        fetch(`${URL}movie/${id}?api_key=${API_KEY}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\n\r\nconst fetchMovieCast = (id) => {\r\n    return (\r\n        fetch(`${URL}movie/${id}/credits?api_key=${API_KEY}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\n\r\nconst fetchMovieReviews = (id) => {\r\n    return (\r\n        fetch(`${URL}movie/${id}/reviews?api_key=${API_KEY}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\n\r\nexport {\r\n    firstFetch,\r\n    fetchByMovieTitle,\r\n    fetchMovieById,\r\n    fetchMovieCast,\r\n    fetchMovieReviews\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstRenderList\":\"HomePage_firstRenderList__22Y8C\",\"link\":\"HomePage_link__2EDkA\"};","import PropTypes from 'prop-types';\r\nimport { useEffect, useRef } from 'react';\r\nimport { Link, } from \"react-router-dom\"\r\nimport { firstFetch } from \"../Services/services\"\r\nimport s from './HomePage.module.css'\r\n\r\nconst HomePage = ({ popMovies, dispatch }) => {\r\n    const isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            dispatch({ type: 'setStatus', payload: 'pending' });\r\n            firstFetch().then(movie => {\r\n                dispatch({ type: 'setPopMovies', payload: movie.results });\r\n                dispatch({ type: 'setStatus', payload: 'resolved' });\r\n            })\r\n                .catch(error => { console.log(error) });\r\n            isFirstRender.current = false\r\n            return\r\n        };\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <h1>Trending today</h1>\r\n            <ul className={s.firstRenderList}>\r\n                {popMovies.map((movie) => {\r\n                    if (movie.title) {\r\n                        return (<li key={movie.id} ><Link to={`movies/${movie.id}`} className={s.link}>{movie.title}</Link></li>)\r\n                    };\r\n                    return (<li key={movie.id} className={s.link}>{movie.name} (No details)</li>)\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n\r\nHomePage.propTypes = {\r\n    popMovies: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string,\r\n        name: PropTypes.string,\r\n    })).isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n};"],"sourceRoot":""}