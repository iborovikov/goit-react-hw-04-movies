{"version":3,"sources":["Components/Services/services.js","Components/MovieDetailsPage/MovieDetails.module.css","Components/MovieDetailsPage/MainDetails.js","Components/MovieDetailsPage/MovieDetailsPage.js"],"names":["API_KEY","URL","firstFetch","fetch","then","res","json","catch","error","console","log","fetchByMovieTitle","title","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","module","exports","MainDetails","movieDetails","dateNormalizer","history","useHistory","className","s","detailsContainer","pictureBlock","type","onClick","goBack","src","poster_path","alt","poster","dataBlock","release_date","vote_average","overview","genres","map","gener","generList","name","MovieDetailsPage","state","status","dispatch","params","useParams","isFirstRender","useRef","useEffect","current","payload","movieId","movie","date","substring","to"],"mappings":"qJAAA,8KAAMA,EAAU,mCACVC,EAAM,gCAENC,EAAa,WACf,OAAQC,MAAM,GAAD,OAAIF,EAAJ,oCAAmCD,EAAnC,oBACRI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAG9BG,EAAoB,SAACC,GACvB,OACIT,MAAM,GAAD,OAAIF,EAAJ,gCAA+BD,EAA/B,kBAAgDY,IAChDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAGlCK,EAAiB,SAACC,GACpB,OACIX,MAAM,GAAD,OAAIF,EAAJ,iBAAgBa,EAAhB,oBAA8Bd,IAC9BI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAIlCO,EAAiB,SAACD,GACpB,OACIX,MAAM,GAAD,OAAIF,EAAJ,iBAAgBa,EAAhB,4BAAsCd,IACtCI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAIlCQ,EAAoB,SAACF,GACvB,OACIX,MAAM,GAAD,OAAIF,EAAJ,iBAAgBa,EAAhB,4BAAsCd,IACtCI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,mBCnCxCS,EAAOC,QAAU,CAAC,iBAAmB,uCAAuC,aAAe,mCAAmC,UAAY,gCAAgC,UAAY,gCAAgC,OAAS,+B,gGCkChNC,EA9BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAE3BC,EAAUC,cAEhB,OACI,qCACI,sBAAKC,UAAWC,IAAEC,iBAAlB,UACI,sBAAKF,UAAWC,IAAEE,aAAlB,UACI,wBAAQC,KAAK,SAASC,QAASP,EAAQQ,OAAvC,qBAEA,qBAAKC,IAAG,yCAAoCX,EAAaY,YAAjD,6CAAyGC,IAAKb,EAAaR,MAAOY,UAAWC,IAAES,YAE3J,sBAAKV,UAAWC,IAAEU,UAAlB,UACI,+BAAKf,EAAaR,MAAlB,KAA2BS,EAAeD,EAAagB,cAAvD,OACA,6CAA4C,GAA5BhB,EAAaiB,aAA7B,OACA,0CACA,4BAAIjB,EAAakB,WACjB,wCACA,6BACKlB,EAAamB,OAAOC,KAAI,SAAAC,GACrB,OAAO,oBAAmBjB,UAAWC,IAAEiB,UAAhC,SAA4CD,EAAME,MAAzCF,EAAM3B,eAKtC,2BCUG8B,UAlCU,SAAC,GAAmD,IAAD,IAAhDC,MAAiBzB,GAA+B,EAAvC0B,OAAuC,EAA/B1B,cAAgB2B,EAAe,EAAfA,SACnDC,EAASC,cACTC,EAAgBC,kBAAO,GAE7BC,qBAAU,WACN,GAAIF,EAAcG,QAQd,OAPAN,EAAS,CAAEnB,KAAM,YAAa0B,QAAS,YACvCzC,YAAemC,EAAOO,SACjBnD,MAAK,SAAAoD,GACFT,EAAS,CAAEnB,KAAM,kBAAmB0B,QAASE,IAC7CT,EAAS,CAAEnB,KAAM,YAAa0B,QAAS,gBACxC/C,OAAM,SAAAC,GAAWC,QAAQC,IAAIF,WACpC0C,EAAcG,SAAU,MAUhC,OAAQjC,GAAgB,qCACpB,cAAC,EAAD,CAAaA,aAAcA,EAAcC,eANtB,SAACoC,GACpB,OAAOA,EAAKC,UAAU,EAAG,MAMzB,uDACA,+BACI,6BAAI,cAAC,IAAD,CAAMC,GAAE,kBAAaX,EAAOO,QAApB,SAAR,oBACJ,6BAAI,cAAC,IAAD,CAAMI,GAAE,kBAAaX,EAAOO,QAApB,YAAR,yBAER","file":"static/js/MovieDetailsPage.9a67f6e9.chunk.js","sourcesContent":["const API_KEY = '6e769984a853ea1bdeede26e9a1ea504'\r\nconst URL = 'https://api.themoviedb.org/3/'\r\n\r\nconst firstFetch = () => {\r\n    return (fetch(`${URL}trending/all/day?api_key=${API_KEY}&language=en-US`)\r\n        .then(res => res.json())\r\n        .catch(error => console.log(error))\r\n    );\r\n};\r\nconst fetchByMovieTitle = (title) => {\r\n    return (\r\n        fetch(`${URL}search/movie?api_key=${API_KEY}&query=${title}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\nconst fetchMovieById = (id) => {\r\n    return (\r\n        fetch(`${URL}movie/${id}?api_key=${API_KEY}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\n\r\nconst fetchMovieCast = (id) => {\r\n    return (\r\n        fetch(`${URL}movie/${id}/credits?api_key=${API_KEY}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\n\r\nconst fetchMovieReviews = (id) => {\r\n    return (\r\n        fetch(`${URL}movie/${id}/reviews?api_key=${API_KEY}`)\r\n            .then(res => res.json())\r\n            .catch(error => console.log(error))\r\n    );\r\n};\r\n\r\nexport {\r\n    firstFetch,\r\n    fetchByMovieTitle,\r\n    fetchMovieById,\r\n    fetchMovieCast,\r\n    fetchMovieReviews\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsContainer\":\"MovieDetails_detailsContainer__2HWcA\",\"pictureBlock\":\"MovieDetails_pictureBlock__1P21w\",\"dataBlock\":\"MovieDetails_dataBlock__krZ5f\",\"generList\":\"MovieDetails_generList__2JuwP\",\"poster\":\"MovieDetails_poster__cpS5S\"};","import PropTypes from 'prop-types';\r\nimport s from './MovieDetails.module.css'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\nconst MainDetails = ({ movieDetails, dateNormalizer }) => {\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <>\r\n            <div className={s.detailsContainer}>\r\n                <div className={s.pictureBlock}>\r\n                    <button type=\"button\" onClick={history.goBack}>Go back</button>\r\n                \r\n                    <img src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}?api_key=6e769984a853ea1bdeede26e9a1ea504`} alt={movieDetails.title} className={s.poster} />\r\n                </div>\r\n                <div className={s.dataBlock}>\r\n                    <h1>{movieDetails.title} ({dateNormalizer(movieDetails.release_date)})</h1>\r\n                    <p>User sorce: {movieDetails.vote_average * 10}%</p>\r\n                    <h2>Overview</h2>\r\n                    <p>{movieDetails.overview}</p>\r\n                    <h2>Geners</h2>\r\n                    <ul>\r\n                        {movieDetails.genres.map(gener => {\r\n                            return <li key={gener.id} className={s.generList}>{gener.name}</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainDetails\r\n\r\nMainDetails.propTypes = {\r\n    movieDetails: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        poster_path: PropTypes.string,\r\n        release_date: PropTypes.string.isRequired,\r\n        vote_average: PropTypes.number.isRequired,\r\n        overview: PropTypes.string.isRequired,\r\n        genres: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n        }))\r\n    }).isRequired,\r\n    dateNormalizer: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { useEffect, useRef } from 'react'\r\nimport { fetchMovieById } from \"../Services/services\"\r\nimport MainDetails from \"./MainDetails\"\r\n\r\nconst MovieDetailsPage = ({ state: { status, movieDetails }, dispatch }) => {\r\n    const params = useParams();\r\n    const isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            dispatch({ type: 'setStatus', payload: 'pending' })\r\n            fetchMovieById(params.movieId)\r\n                .then(movie => {\r\n                    dispatch({ type: 'setMovieDetails', payload: movie })\r\n                    dispatch({ type: 'setStatus', payload: 'resolved' })\r\n                }).catch(error => { console.log(error) });\r\n            isFirstRender.current = false\r\n            return\r\n        };\r\n    });\r\n\r\n    const dateNormalizer = (date) => {\r\n        return date.substring(0, 4)\r\n    };\r\n\r\n        \r\n    return (movieDetails && <>\r\n        <MainDetails movieDetails={movieDetails} dateNormalizer={dateNormalizer} />\r\n        <h3>Aditional information</h3>\r\n        <ul>\r\n            <li><Link to={`/movies/${params.movieId}/Cast`}>Cast</Link></li>\r\n            <li><Link to={`/movies/${params.movieId}/Reviews`}>Reviws</Link></li>\r\n        </ul>\r\n        <hr />\r\n    </>\r\n    );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n\r\nMovieDetailsPage.propTypes = {\r\n    state: PropTypes.shape({\r\n        status: PropTypes.string.isRequired,\r\n        movieDetails: PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            poster_path: PropTypes.string,\r\n            release_date: PropTypes.string.isRequired,\r\n            vote_average: PropTypes.number.isRequired,\r\n            overview: PropTypes.string.isRequired,\r\n            genres: PropTypes.arrayOf(PropTypes.shape({\r\n                id: PropTypes.number.isRequired,\r\n                name: PropTypes.string.isRequired,\r\n            }))\r\n        }),\r\n    }),\r\n    dispatch: PropTypes.func.isRequired,\r\n};"],"sourceRoot":""}